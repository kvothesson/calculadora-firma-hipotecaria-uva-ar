class ExchangeRateService{constructor(){this.tiposCambio={oficial:1301,simulador:1301,techo:1400,piso:1e3},this.fechaBase=new Date("2025-04-01")}async obtenerCotizacionOficial(){try{const a=this.obtenerCotizacionDeCache();if(a)return this.aplicarCotizacion(a.valor,a.fuente),{valor:a.valor,fuente:a.fuente,fecha:a.fecha};const e=await this.obtenerCotizacionBCRA();if(e)return this.aplicarCotizacion(e.valor,e.fuente),this.guardarCotizacionEnCache(e.valor,e.fuente),e;const o=await this.obtenerCotizacionAlternativa();if(o)return this.aplicarCotizacion(o.valor,o.fuente),this.guardarCotizacionEnCache(o.valor,o.fuente),o;throw new Error("Todas las APIs fallaron")}catch(a){return console.log("No se pudo obtener la cotización oficial, usando valor por defecto"),this.aplicarCotizacion(1301,"Valor por defecto"),{valor:1301,fuente:"Valor por defecto",fecha:(new Date).toISOString().split("T")[0]}}}async obtenerCotizacionBCRA(){try{const a=new Date,e=new Date(a.getTime()-6048e5),o=a.toISOString().split("T")[0],t=`https://api.bcra.gob.ar/estadisticascambiarias/v1.0/Cotizaciones/USD?fechaDesde=${e.toISOString().split("T")[0]}&fechaHasta=${o}`,i=await fetch(t),c=await i.json();if(c&&c.results&&c.results.length>0){const a=c.results[0];if(a.detalle&&a.detalle[0]){const e=a.detalle[0].tipoCotizacion,o=a.fecha;if(e&&e>0)return console.log(`Cotización BCRA obtenida: $${e} (fecha: ${o})`),{valor:e,fuente:"BCRA",fecha:o}}}}catch(a){console.log("API del BCRA no disponible:",a.message)}return null}async obtenerCotizacionAlternativa(){try{const a=await fetch("https://dolarapi.com/v1/dolares/oficial"),e=await a.json();if(e&&e.venta){const a=parseFloat(e.venta);return console.log(`Cotización alternativa obtenida: $${a}`),{valor:a,fuente:"API alternativa",fecha:(new Date).toISOString().split("T")[0]}}}catch(a){console.log("API alternativa también falló:",a.message)}return null}aplicarCotizacion(a,e){this.tiposCambio.oficial=a,this.tiposCambio.simulador=a,console.log(`Cotización obtenida de ${e}: $${a}`),console.log(`Bandas fijas: Piso $${this.tiposCambio.piso}, Techo $${this.tiposCambio.techo}`)}obtenerCotizacionDeCache(){try{const a=localStorage.getItem("cotizacion_cache");if(!a)return null;const e=JSON.parse(a),o=new Date,t=new Date(e.timestamp);return(o-t)/36e5<1?(console.log(`Usando cotización desde cache (${e.fuente}): $${e.valor}`),e):(localStorage.removeItem("cotizacion_cache"),null)}catch(a){return console.log("Error al leer cache:",a),localStorage.removeItem("cotizacion_cache"),null}}guardarCotizacionEnCache(a,e){try{const o={valor:a,fuente:e,fecha:(new Date).toISOString().split("T")[0],timestamp:(new Date).toISOString()};localStorage.setItem("cotizacion_cache",JSON.stringify(o)),console.log(`Cotización guardada en cache: $${a} (${e})`)}catch(a){console.log("Error al guardar en cache:",a)}}calcularBandasCambiarias(){const a=new Date,e=12*(a.getFullYear()-this.fechaBase.getFullYear())+(a.getMonth()-this.fechaBase.getMonth()),o=Math.pow(.99,Math.max(0,e)),t=Math.round(this.tiposCambio.piso*o),i=Math.pow(1.01,Math.max(0,e));return{piso:t,techo:Math.round(this.tiposCambio.techo*i),mesesTranscurridos:Math.max(0,e),fechaBase:this.fechaBase.toLocaleDateString("es-AR"),fechaActual:a.toLocaleDateString("es-AR")}}calcularPisoBandaCambiaria(){const a=this.calcularBandasCambiarias();return{piso:a.piso,mesesTranscurridos:a.mesesTranscurridos,fechaBase:a.fechaBase,fechaActual:a.fechaActual}}validarTipoCambioConBandas(a){const e=this.calcularBandasCambiarias(),o=e.piso,t=e.techo,i=this.tiposCambio.oficial;let c="",n="info";if(a>t)c=`⚠️ Tipo de cambio por encima del techo de banda ($${t}). Esto podría indicar una devaluación fuerte.`,n="warning";else if(a<o)c=`📉 Tipo de cambio por debajo del piso de banda ($${o}). Escenario poco probable según las bandas actuales.`,n="info";else if(Math.abs(a-i)/i>.05){c=`💱 Simulando ${a>i?"+":""}${((a-i)/i*100).toFixed(1)}% respecto al oficial. Dentro de la banda pero considerar el riesgo cambiario.`,n="info"}return{mensaje:c,tipo:n,bandas:e}}actualizarTipoCambioSimulador(a){this.tiposCambio.simulador=a}getTipoCambioOficial(){return this.tiposCambio.oficial}getTipoCambioSimulador(){return this.tiposCambio.simulador}getTiposCambio(){return{...this.tiposCambio}}}"undefined"!=typeof module&&module.exports?module.exports=ExchangeRateService:window.ExchangeRateService=ExchangeRateService;