class CalculatorController{constructor(){this.calculationService=new CalculationService,this.exchangeRateService=new ExchangeRateService,this.validationService=new ValidationService,this.utilityService=new UtilityService,this.urlStateService=new URLStateService,this.elementos={valorPropiedad:document.getElementById("valorPropiedad"),provincia:document.getElementById("provincia"),montoPrestamo:document.getElementById("montoPrestamo"),plazo:document.getElementById("plazo"),tasaInteres:document.getElementById("tasaInteres"),sueldoMensual:document.getElementById("sueldoMensual"),primeraCuota:document.getElementById("primeraCuota"),totalPagar:document.getElementById("totalPagar"),diferenciaSimulador:document.getElementById("diferenciaSimulador"),diferenciaSimuladorUSD:document.getElementById("diferenciaSimuladorUSD"),tcSimuladorTexto:document.getElementById("tcSimuladorTexto"),maxCuotaSugerida:document.getElementById("maxCuotaSugerida"),cuotaStatusIndicator:document.getElementById("cuotaStatusIndicator"),cuotaSugeridaValor:document.getElementById("cuotaSugeridaValor"),cuotaCalculadaValor:document.getElementById("cuotaCalculadaValor"),statusMessage:document.getElementById("statusMessage")},this.estado={cotizacionObtenida:!1,calculosRealizados:!1,ultimaValidacion:null},this.inicializar()}async inicializar(){try{console.log("🚀 Inicializando calculadora..."),await this.obtenerCotizacionOficial(),this.establecerValoresPorDefecto(),this.restaurarEstadoDesdeURL(),this.actualizarValorPropiedadPesos(),this.actualizarMontoPrestamoEquivalente(),this.agregarEventListeners(),this.actualizarSlidersGastos(this.elementos.provincia.value),setTimeout(()=>{this.calcularTodo()},100),console.log("✅ Calculadora inicializada correctamente")}catch(e){console.error("❌ Error al inicializar calculadora:",e)}}async obtenerCotizacionOficial(){try{const e=await this.exchangeRateService.obtenerCotizacionOficial();return this.actualizarCotizacionEnInterfaz(e.fuente,e.fecha),this.estado.cotizacionObtenida=!0,e}catch(e){throw console.error("Error al obtener cotización:",e),e}}establecerValoresPorDefecto(){console.log("⚙️ Estableciendo valores por defecto...");Object.entries({valorPropiedad:"155000",montoPrestamo:"70000000",plazo:"20",tasaInteres:"8.5"}).forEach(([e,t])=>{this.elementos[e]&&!this.elementos[e].value&&(this.elementos[e].value=t,console.log(`✅ ${e} establecido por defecto: ${t}`))}),console.log("✅ Valores por defecto establecidos")}restaurarEstadoDesdeURL(){try{if(this.urlStateService.hasURLParams()){console.log("🔗 Restaurando estado desde URL...");const e=this.urlStateService.deserializeStateFromURL();Object.keys(e).length>0&&(this.urlStateService.applyStateToForm(e),console.log("✅ Estado restaurado desde URL:",e))}}catch(e){console.error("❌ Error al restaurar estado desde URL:",e)}}actualizarURL(){try{const e=this.urlStateService.getCurrentFormState();this.urlStateService.serializeStateToURL(e)}catch(e){console.error("❌ Error al actualizar URL:",e)}}actualizarValorPropiedadPesos(){console.log("💱 Actualizando valor de propiedad en pesos...");const e=document.getElementById("valorPropiedadPesos");if(e&&this.elementos.valorPropiedad.value){const t=parseFloat(this.elementos.valorPropiedad.value),a=this.exchangeRateService.getTipoCambioOficial(),o=this.utilityService.convertirUSDaPesos(t,a);e.textContent=this.utilityService.formatearPesos(o),console.log("✅ Valor propiedad actualizado:",{USD:t,tipoCambio:a,pesos:o,formateado:this.utilityService.formatearPesos(o)})}}actualizarMontoPrestamoEquivalente(){console.log("💱 Actualizando monto préstamo equivalente en USD...");const e=document.getElementById("montoPrestamoEquivalente");if(e&&this.elementos.montoPrestamo.value){const t=parseFloat(this.elementos.montoPrestamo.value),a=this.exchangeRateService.getTipoCambioOficial(),o=this.utilityService.convertirPesosaUSD(t,a);e.textContent=`USD $${o.toLocaleString("en-US",{minimumFractionDigits:0,maximumFractionDigits:0})}`,console.log("✅ Monto préstamo equivalente actualizado:",{pesos:t,tipoCambio:a,USD:o})}}agregarEventListeners(){this.elementos.valorPropiedad.addEventListener("input",()=>{this.actualizarValorPropiedadPesos(),this.calcularTodo(),this.actualizarURL()}),this.elementos.provincia.addEventListener("change",()=>{window.AnalyticsTracker&&window.AnalyticsTracker.trackProvinciaChanged&&window.AnalyticsTracker.trackProvinciaChanged(this.elementos.provincia.value),this.actualizarSlidersGastos(this.elementos.provincia.value),this.calcularTodo(),this.actualizarURL()}),this.elementos.montoPrestamo.addEventListener("input",()=>{this.actualizarMontoPrestamoEquivalente(),this.calcularTodo(),this.actualizarURL()}),this.elementos.plazo.addEventListener("input",()=>{this.actualizarPlazo(),this.actualizarURL()}),this.elementos.tasaInteres.addEventListener("input",()=>{this.actualizarTasa(),this.actualizarURL()}),this.elementos.sueldoMensual.addEventListener("input",()=>{this.calcularMaxCuotaSugerida(),this.actualizarURL()}),["escritura","inmobiliaria","firmas","sellos"].forEach(e=>{const t=document.getElementById(e+"Slider");t&&t.addEventListener("input",()=>{if(window.AnalyticsTracker&&window.AnalyticsTracker.trackGastosUpdated){const e={escritura:parseFloat(document.getElementById("escrituraSlider")?.value||0),inmobiliaria:parseFloat(document.getElementById("inmobiliariaSlider")?.value||0),firmas:parseFloat(document.getElementById("firmasSlider")?.value||0),sellos:parseFloat(document.getElementById("sellosSlider")?.value||0)};window.AnalyticsTracker.trackGastosUpdated(e)}this.calcularTodo(),this.actualizarURL()})})}calcularTodo(){try{const e=this.obtenerValoresFormulario();console.log("🔍 Valores obtenidos del formulario:",e);const t=this.calculationService.validarValores(e,this.exchangeRateService.getTipoCambioOficial());if(!t.isValid)return console.log("❌ Validación falló:",t.error),void(window.AnalyticsTracker&&window.AnalyticsTracker.trackCalculationError&&window.AnalyticsTracker.trackCalculationError(new Error(t.error),e));window.AnalyticsTracker&&window.AnalyticsTracker.trackCalculationStarted&&window.AnalyticsTracker.trackCalculationStarted(e);const a=this.calculationService.calcularCuotaInicial(e.montoPrestamo,e.tasaInteres,e.plazo);console.log("💰 Cuota inicial calculada:",a);const o=this.calcularGastosExtraConPorcentajesPersonalizados(e.valorPropiedad,e.provincia);console.log("🏠 Gastos extra calculados:",o);const i=this.calculationService.calcularTotalOperacion(e.valorPropiedad,o,this.exchangeRateService.getTipoCambioOficial());console.log("📊 Total operación:",i);const s=this.calculationService.calcularDiferenciaACubrir(i,e.montoPrestamo);console.log("💸 Diferencia a pagar:",s);const r={cuotaInicial:a,gastosExtra:o,totalOperacion:i,diferencia:s,valores:e};console.log("📋 Objeto de resultados completo:",r),this.actualizarResultados(r),this.calcularEscenariosTipoCambio(e,i,s),this.calcularMaxCuotaSugerida(),this.generarConsejosDinamicos(e,a,o.total),this.estado.calculosRealizados=!0,window.AnalyticsTracker&&window.AnalyticsTracker.trackCalculationCompleted&&window.AnalyticsTracker.trackCalculationCompleted(r,e)}catch(e){console.error("❌ Error en cálculo:",e),window.AnalyticsTracker&&window.AnalyticsTracker.trackCalculationError&&window.AnalyticsTracker.trackCalculationError(e,this.obtenerValoresFormulario())}}obtenerValoresFormulario(){const e={valorPropiedad:this.utilityService.parsearNumero(this.elementos.valorPropiedad.value,0),provincia:this.elementos.provincia.value,montoPrestamo:this.utilityService.parsearNumero(this.elementos.montoPrestamo.value,0),plazo:parseInt(this.elementos.plazo.value)||20,tasaInteres:this.utilityService.parsearNumero(this.elementos.tasaInteres.value,8.5),sueldoMensual:this.utilityService.parsearNumero(this.elementos.sueldoMensual.value,0)};return console.log("📝 Valores obtenidos del formulario:",e),e}calcularGastosExtraConPorcentajesPersonalizados(e,t){const a={};return["escritura","inmobiliaria","firmas","sellos"].forEach(e=>{const t=document.getElementById(e+"Slider");t&&(a[e]=parseFloat(t.value))}),this.calculationService.calcularGastosExtra(e,t,a)}actualizarResultados(e){console.log("🔄 Iniciando actualización de resultados en el DOM"),this.elementos.primeraCuota&&(this.elementos.primeraCuota.textContent=this.utilityService.formatearPesos(e.cuotaInicial));const t=document.getElementById("cuotaMensualARS");t&&(t.textContent=this.utilityService.formatearPesos(e.cuotaInicial)),this.elementos.totalPagar&&(this.elementos.totalPagar.textContent=this.utilityService.formatearPesos(e.totalOperacion));const a=document.getElementById("totalPagarUSD");if(a){const t=this.exchangeRateService.getTipoCambioOficial(),o=e.totalOperacion/t;a.innerHTML=`<strong>USD $${o.toLocaleString("en-US",{minimumFractionDigits:0,maximumFractionDigits:0})}</strong>`}this.actualizarValorCasa(e.valores.valorPropiedad),this.actualizarGastosDetallados(e.gastosExtra),this.actualizarEscenariosTipoCambio(e),console.log("🔄 Finalizando actualización de resultados en el DOM")}actualizarValorCasa(e){const t=this.exchangeRateService.getTipoCambioOficial(),a=e*t,o=document.getElementById("valorCasaARS");o&&(o.textContent=this.utilityService.formatearPesos(a));const i=document.getElementById("valorCasaUSD");i&&(i.textContent=`USD $${e.toLocaleString("en-US",{minimumFractionDigits:0,maximumFractionDigits:0})}`),console.log("✅ Valor casa actualizado:",{USD:e,ARS:a,tipoCambio:t})}actualizarGastosDetallados(e){const t=this.exchangeRateService.getTipoCambioOficial();this.utilityService.setLineaMoneda("gastoEscrituraARS","ARS",e.desglose.escritura*t),this.utilityService.setLineaMoneda("gastoEscrituraUSD","USD",e.desglose.escritura),this.utilityService.setLineaMoneda("gastoInmobiliariaARS","ARS",e.desglose.inmobiliaria*t),this.utilityService.setLineaMoneda("gastoInmobiliariaUSD","USD",e.desglose.inmobiliaria),this.utilityService.setLineaMoneda("gastoFirmasARS","ARS",e.desglose.firmas*t),this.utilityService.setLineaMoneda("gastoFirmasUSD","USD",e.desglose.firmas),this.utilityService.setLineaMoneda("gastoSellosARS","ARS",e.desglose.sellos*t),this.utilityService.setLineaMoneda("gastoSellosUSD","USD",e.desglose.sellos),this.utilityService.setLineaMoneda("gastosTotalARS","ARS",e.total*t,!0),this.utilityService.setLineaMoneda("gastosTotalUSD","USD",e.total,!0)}calcularEscenariosTipoCambio(e,t,a){console.log("Escenarios de tipo de cambio calculados automáticamente")}actualizarEscenariosTipoCambio(e){const t=this.exchangeRateService.calcularBandasCambiarias(),a=document.getElementById("tcPisoEscenario"),o=document.getElementById("tcOficialEscenario"),i=document.getElementById("tcTechoEscenario");a&&(a.textContent=this.utilityService.formatearPesos(t.piso)),o&&(o.textContent=this.utilityService.formatearPesos(this.exchangeRateService.getTipoCambioOficial())),i&&(i.textContent=this.utilityService.formatearPesos(t.techo));const s=e.valores.valorPropiedad+e.gastosExtra.total;this.actualizarEscenarioPiso(s,e),this.actualizarEscenarioOficial(s,e),this.actualizarEscenarioTecho(s,e)}actualizarEscenarioPiso(e,t){const a=this.exchangeRateService.calcularBandasCambiarias(),o=e*a.piso;this.utilityService.setLineaMoneda("totalPisoARS","ARS",o),this.utilityService.setLineaMoneda("totalPisoUSD","USD",e),this.utilityService.setLineaMoneda("prestamoPisoARS","ARS",t.valores.montoPrestamo),this.utilityService.setLineaMoneda("prestamoPisoUSD","USD",t.valores.montoPrestamo/a.piso);const i=o-t.valores.montoPrestamo;this.utilityService.setLineaMoneda("diferenciaPisoARS","ARS",i),this.utilityService.setLineaMoneda("diferenciaPisoUSD","USD",i/this.exchangeRateService.getTipoCambioOficial())}actualizarEscenarioOficial(e,t){const a=this.exchangeRateService.getTipoCambioOficial(),o=e*a;this.utilityService.setLineaMoneda("totalOficialARS","ARS",o),this.utilityService.setLineaMoneda("totalOficialUSD","USD",e),this.utilityService.setLineaMoneda("prestamoOficialARS","ARS",t.valores.montoPrestamo),this.utilityService.setLineaMoneda("prestamoOficialUSD","USD",t.valores.montoPrestamo/a);const i=o-t.valores.montoPrestamo;this.utilityService.setLineaMoneda("diferenciaOficialARS","ARS",i),this.utilityService.setLineaMoneda("diferenciaOficialUSD","USD",i/a)}actualizarEscenarioTecho(e,t){const a=this.exchangeRateService.calcularBandasCambiarias(),o=e*a.techo;this.utilityService.setLineaMoneda("totalTechoARS","ARS",o),this.utilityService.setLineaMoneda("totalTechoUSD","USD",e),this.utilityService.setLineaMoneda("prestamoTechoARS","ARS",t.valores.montoPrestamo),this.utilityService.setLineaMoneda("prestamoTechoUSD","USD",t.valores.montoPrestamo/a.techo);const i=o-t.valores.montoPrestamo;this.utilityService.setLineaMoneda("diferenciaTechoARS","ARS",i),this.utilityService.setLineaMoneda("diferenciaTechoUSD","USD",i/this.exchangeRateService.getTipoCambioOficial())}calcularMaxCuotaSugerida(){const e=parseFloat(this.elementos.sueldoMensual.value),t=this.calculationService.calcularMaxCuotaSugerida(e);this.elementos.maxCuotaSugerida&&(this.elementos.maxCuotaSugerida.textContent=this.utilityService.formatearPesos(t)),this.actualizarIndicadorCuota(t)}actualizarIndicadorCuota(e){const t=document.getElementById("cuotaStatusIndicator"),a=document.getElementById("cuotaStatusText");if(!t||!a)return;const o=document.getElementById("cuotaMensualARS");let i=0;if(o&&o.textContent){const e=o.textContent;i=parseFloat(e.replace(/[^\d]/g,""))}t.style.display="block",i>0?i>e?(t.className="cuota-status-indicator warning",a.innerHTML="\n                    ⚠️ <strong>¡Atención!</strong> Tu cuota supera el máximo recomendado. \n                    Considerá ajustar el monto del préstamo o el plazo.\n                ",this.elementos.sueldoMensual.style.borderColor="#dc2626",this.elementos.sueldoMensual.style.boxShadow="0 0 0 4px rgba(220, 38, 38, 0.15)"):(t.className="cuota-status-indicator success",a.innerHTML="\n                    ✅ <strong>¡Perfecto!</strong> Tu cuota está dentro del rango recomendado.\n                ",this.elementos.sueldoMensual.style.borderColor="",this.elementos.sueldoMensual.style.boxShadow=""):(t.className="cuota-status-indicator info",a.innerHTML="\n                💡 <strong>¡Excelente!</strong> Tu sueldo permite una cuota de hasta el máximo sugerido.\n            ",this.elementos.sueldoMensual.style.borderColor="",this.elementos.sueldoMensual.style.boxShadow="")}actualizarSlidersGastos(e){console.log("🏠 Actualizando sliders de gastos para provincia:",e);const t=this.calculationService.getGastosConfig(e);t?(["escritura","inmobiliaria","firmas","sellos"].forEach(e=>{const a=document.getElementById(e+"Slider");a&&(a.value=t[e].intermedio,console.log(`✅ Slider ${e} actualizado:`,t[e].intermedio))}),console.log("✅ Todos los sliders de gastos actualizados")):console.log("❌ No se encontró configuración de gastos para provincia:",e)}actualizarPlazo(){const e=document.getElementById("plazoValor");e&&(e.textContent=this.elementos.plazo.value),this.calcularTodo()}actualizarTasa(){const e=document.getElementById("tasaValor");e&&(e.textContent=this.elementos.tasaInteres.value),this.calcularTodo()}actualizarCotizacionEnInterfaz(e="Automático",t=null){const a=document.getElementById("cotizacionActual"),o=document.getElementById("fechaCotizacion");if(a&&(a.textContent=this.utilityService.formatearPesos(this.exchangeRateService.getTipoCambioOficial())),o){const a=new Date;let i="";i="BCRA"===e?`✅ BCRA Oficial - ${t||a.toLocaleDateString("es-AR")}`:"API alternativa"===e?`⚠️ API alternativa - ${a.toLocaleTimeString("es-AR")}`:"Valor por defecto"===e?"❌ Sin conexión - Valor estimado":`Desde cache - ${a.toLocaleTimeString("es-AR")}`,o.textContent=i}}generarConsejosDinamicos(e,t,a){console.log("Generando consejos dinámicos...",{valores:e,cuotaInicial:t,totalGastos:a})}getEstado(){return{...this.estado}}getElementos(){return{...this.elementos}}}"undefined"!=typeof module&&module.exports?module.exports=CalculatorController:window.CalculatorController=CalculatorController;